# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

en:
  global:
    actions: Actions
    save: Saving
  action:
    destroy: Delete
    cancel: Cancel
    invoice: Invoice
    reopen: Reopen
    clone: Clone
    copy_info: Copy info
  buttons:
    create: Create
    update: Update
  operation:
    items:
      messages:
        destroyed: 'Item was destroyed'
    orders:
      messages:
        destroyed: 'Order was destroyed'
  views:
    order:
      state: State
      delete: Delete
      listing_order: My Orders
      new_order: 'New Order'
      name: Name
      created_at: Created At
      description: Description
      items: Products and Services
      choose_products_or_services: Choose Products or Services
    product:
      new_product: 'New Product'
  leftsidebar:
    products: 'Products'
    orders: 'Orders'
    actions: Actions
    logout: Logout
    login: Login
    signup: Sign Up
  hello: "Hello world"
  welcome_headline: Welcome to Fluor
  company_name: Fluor
  successfull_messages:
    created: "%{model} was successfully created."
    updated: "%{model} was successfully updated."
    deleted: "%{model} was successfully deleted."
    canceled: '%{model} was successfully canceled'
  error_messages:
    record_not_found: Record not found
    action_not_found: The action could not be found
    cant_cancel: 'You can`n cancel order'
    cant_create: 'You can`n create new order'
    cant_invoice: 'You can`n invoice order'
    cant_reopen: 'You can`n reopen order'
  activerecord:
    models:
      order: Order
